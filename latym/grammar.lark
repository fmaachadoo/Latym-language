?start : program+

?program: expr
        | ifstatement
        | variable
        | imprimo
        | loopdum        

?expr   : value operator expr -> binop
        | value
        
?loopdum    : "dum" condition "fac" block

?imprimo : "inprimo" parentheses expr (("."expr)*)? parentheses -> inprimo

?variable: name "aequipar" expr -> var

?ifstatement    : "si" condition "fac" block
                | "si" BOOL "fac" block

?condition  : expr COMPARE? expr

?block  : "sic" (program ".")* "cis" -> block

?name   : NAME -> name

?value  : atom
        | parentheses expr parentheses -> prnthss

?atom   : FLOAT -> float
        | INT -> int
        | STRING -> string
        | NAME -> name
        | BOOL -> boolean

?parentheses:( OPEN_PARENTHESES
            | CLOSE_PARENTHESES) 

?number : INT
        | FLOAT

?operator: OP -> op



//Terminais
STRING      : /"[^"\\]*(\\[^\n\t\r\f][^"\\]*)*"/
INT.1       : /-?\d+/
FLOAT.2     : /-?\d+\.\d+/
OPEN_PARENTHESES : "posthac die"
CLOSE_PARENTHESES : "usque huc"
OP.3: /adde|minuas|multiplica|divide|recide/
COMPARE     : /(maior quam|minus quam|aequalis|non aequalis)/
LOGICAL     : /atque|vel/
BOOL.1     : /verum|falsus/
NAME.0        : /[a-zA-Z][\w\-_]*\??/

%ignore /\s+/
%ignore /;[^\n]*/
